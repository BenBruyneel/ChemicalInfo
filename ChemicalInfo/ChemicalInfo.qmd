---
format:
  html
server: shiny
execute:
  echo: false
  warning: false
  message: false
---

```{r}
#| code-summary: "libraries"

library(gt)
library(enviPat)
library(dplyr)
library(purrr)
library(kableExtra)
library(massSpectrometryR)

source("R/tools.R")

```

```{r}
#| code-summary: "Info"

# -----------------
info <- list()
info$name <- "Alpha-Tocopherol Acetate"
info$CAS <- "58-95-7"
info$pubchemID <- "86472"
info$MolecularFormula <- "C31H52O3"
info$smiles <- "CC1=C(C(=C(C2=C1OC(CC2)(C)CCCC(C)CCCC(C)CCCC(C)C)C)OC(=O)C)C"
info$AdditionalInfo <- list()
info$AdditionalInfo$Solubility <- data.frame(CID = c('86472','86472'),
                                             	Name = c('Alpha-Tocopherol Acetate','Alpha-Tocopherol Acetate'),
                                             	Result = c('less than 1 mg/mL at 63 Â°F (NTP, 1992)','Insoluble in cold water and hot water '),
                                             	SourceName = c('CAMEO Chemicals','DrugBank       '),
                                             	SourceID = c('21117  ','DB14003'))
rownames(info$AdditionalInfo$Solubility) <- c('1','2')
info$AdditionalInfo$Other <- tibble()

info$isotopeInfo <- list(positive = TRUE,
                         adduct = "H",
                         resolution = 20000,
                         threshold = 0.1,
                         mzAccuracy = 4,
                         abundanceAccuracy = 2)
info$chargeStates <- list(positive = TRUE,
                          monoisotopic = TRUE,
                          adduct = "H",
                          chargeStates = c(1,4),
                          mzAccuracy = 4)
info$adducts <- data.frame(name = c('[M+H]+  ','[M+Na]+ ','[M+K]+  ','[M+NH4]+','H2O    '),
                           adductFormula = c('H  ','Na ','K  ','NH4','H2O'),
                           adductsNr = c('1','1','1','1','1'),
                           adductsPosNeg = c('+','+','+','+','+'),
                           adductCharge = c('1','1','1','1','1'))
rownames(info$adducts) <- c('1','2','3','4','5')

info$adductInfo <- list(adductsMonoisotopic = TRUE,
                        adductsAccuracy = 4)

info$structure <- list(
  structureWidth = 750,
  structureHeight = 750,
  structurePlotSize = 32,
  atomsFontSize2D = 12,
  showAllHydrogens = TRUE,
  showAllC = FALSE,
  showTerminalC = TRUE
)

# -----------------
  

additionalInfo <- info$additionalInfo

```

```{r}
#| code-summary: "General Info"
generalInfoTable <- data.frame(parameter =  c("Name","CAS","PubChem ID","Formula","Exact Mass","Average Mass","Smiles"),
                               value = c(ifelse(is.null(info$name),
                                                "", info$name),
                                         ifelse(is.null(info$CAS),
                                                "", info$CAS),
                                         ifelse(is.na(info$pubchemID),
                                                "", info$pubchemID),
                                         ifelse(identical(info$MolecularFormula, NA),
                                                "", formulaString(stringToFormula(info$MolecularFormula), useMarkdown = T)),
                                         ifelse(identical(info$MolecularFormula, NA),
                                                "", stringToFormula(info$MolecularFormula) %>% formulaToMass(enviPat = TRUE) %>% formatDigits(4)()),
                                         ifelse(identical(info$MolecularFormula, NA),
                                                "", stringToFormula(info$MolecularFormula) %>% formulaToMass(enviPat = TRUE, exact = FALSE) %>% formatDigits(4)()),
                                         ifelse(identical(info$smiles, NA),
                                                "", info$smiles)))
gt(generalInfoTable)  %>%
    fmt_markdown(columns = "value") %>%
    cols_width(parameter ~ pct(25), value ~ pct(75)) %>%
    tab_options(column_labels.hidden = TRUE,
                table.align = "left",
                table.width = pct(100),
                table.font.size = "1.25") %>%
    tab_style(style = list(cell_borders(sides = "all", color = "#000000", style = "hidden", weight = px(1))),
              locations = list(cells_body())) %>%
    tab_header(title = md("**General Info**")) %>%
    opt_align_table_header(align = "left")
```

```{r}
#| code-summary: "setup for structure plot"
#| context: setup

library(shiny)
library(chemdoodle)

```

```{r}
#| code-summary: "UI structure plot"
#| layout-align: center
#| context: data

infoH <- info

chemdoodle_viewerOutput(outputId = "structurePlot",
                                     width = "780px",
                                     height = "780px")

```

```{r}
#| code-summary: "server: draw structure"
#| context: server
output$structurePlot <- renderChemdoodle({
  # https://github.com/zachcp/chemdoodle/blob/master/R/chemdoodle_viewer.R
  if (infoH$smiles != "") {
    chemdoodle_viewer(smiles = infoH$smiles,
                      width = infoH$structure$structureWidth,
                      height = infoH$structure$structureHeight,
                      bondscale = infoH$structure$structurePlotSize,
                      atoms_font_size_2D = infoH$structure$atomsFontSize2D,
                      atoms_implicitHydrogens_2D = infoH$structure$showAllHydrogens,
                      atoms_displayAllCarbonLabels_2D = infoH$structure$showAllC,
                      atoms_displayTerminalCarbonLabels_2D = infoH$structure$showTerminalC)
  }
})

```

```{r}
#| code-summary: "m/z tables"
#| layout-ncol: 3
#| results: asis

# ---- Isotope Pattern ----

if (!identical(info$isotopeInfo, NA)){
  generateIsotopePatternGT(chemicalFormula = info$MolecularFormula,
                           charge = ifelse(info$isotopeInfo$positive,1,-1),
                           adduct = ifelse(info$isotopeInfo$adduct == "-",
                                           NA, info$isotopeInfo$adduct),
                           resolution = info$isotopeInfo$resolution,
                           detect = "centroid",
                           threshold = info$isotopeInfo$threshold,
                           mzAccuracy = info$isotopeInfo$mzAccuracy,
                           abundanceAccuracy = info$isotopeInfo$abundanceAccuracy)
}

# ---- Charge States ----

if (!identical(info$chargeStates, NA)){
    generateChargeTablesGT(aFormula = removeMarkdown(generalInfoTable$value[generalInfoTable$parameter == "Formula"]) |> stringToFormula(),
                           adductFormula = ifelseProper(info$chargeStates$adduct == "H",
                                                        c(H=1),
                                                        emptyFormula()),
                           adductsNr = ifelseProper(info$chargeStates$positive,
                                                    info$chargeStates$chargeStates[1]:info$chargeStates$chargeStates[2],
                                                    rev(-info$chargeStates$chargeStates[2]:-info$chargeStates$chargeStates[1])),
                           exact = info$chargeStates$monoisotopic,
                           adductCharge = ifelse(info$chargeStates$positive, +1, -1),
                           useMarkdown = T,
                           mzAccuracy = info$chargeStates$mzAccuracy)
}

# ---- adduct table ----

if (!identical(info$adductsInfo, NA)){
    info$adducts$adductFormula <- map_chr(info$adducts$adductFormula, ~removeAllbutLettersDigits(.x))
    generateAdductTableGT(aFormula = removeMarkdown(generalInfoTable$value[generalInfoTable$parameter == "Formula"]) |> stringToFormula(),
                          createTable = info$adducts,
                          exact = info$adductInfo$adductsMonoisotopic,
                          mzAccuracy = info$adductInfo$adductsAccuracy,
                          useMarkdown = T)
}
```

```{r}
#| code-summary: "Additional Information"
#| results: asis

# gt gives issues for some reasons...

if (!identical(info$AdditionalInfo, NA)){
  getAdditionalInfoTable(info$AdditionalInfo)
}

# if (length(pubchemInfo$additionalInfoResult) > 0){
#   addResult <- pubchemInfo$additionalInfoResult[map_lgl(pubchemInfo$additionalInfoResult, ~ncol(.x)>0)]
#   if (length(addResult) > 0){
#     for (counter in 1:length(addResult)){
#       addResult[[counter]] %>%
#         dplyr::select(Result) %>%
#         gt() %>%
#         tab_options(column_labels.hidden = TRUE,
#                     table.align = "left",
#                     table.width = pct(100),
#                     table.font.size = "1.25") %>%
#         tab_header(title = names(addResult)[counter]) %>%
#         opt_align_table_header("left") %>% print()
#         # kbl(col.names = names(addResult)[counter]) %>%
#         # kable_styling() %>%
#         # cat()
#     }
#   } else {
#       data.frame(Result = "No additional data exists or could be retrieved") %>%
#       gt() %>%
#       tab_options(column_labels.hidden = TRUE,
#                   table.align = "left",
#                   table.width = pct(100),
#                   table.font.size = "1.25") %>%
#       print()
#       # kbl(col.names = "") %>%
#       # kable_styling() %>%
#       # cat()
#   }
# } else {
#   data.frame(Result = "No additional data requested") %>%
#       gt() %>%
#       tab_options(column_labels.hidden = TRUE,
#                   table.align = "left",
#                   table.width = pct(100),
#                   table.font.size = "1.25") %>%
#       print()
#       # kbl(col.names = "") %>%
#       # kable_styling() %>%
#       # cat()
# }
```